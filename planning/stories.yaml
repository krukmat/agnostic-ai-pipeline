- id: S1
  epic: E1
  description: Register new users via email with a secure password hash
  acceptance:
  - Successful registration creates a user profile
  - logs can access their orders and data securely
  priority: P1
  status: todo
- id: S2
  epic: E1
  description: Implement a user login feature allowing customers to view past orders,
    save, or edit information.
  acceptance:
  - Logged-in users can retrieve and manage past orders through the system's dashboard
    interface.
  priority: P1
  status: todo
- id: S3
  epic: E2
  description: Retrieve all product categories and product listings based on various
    filter options like price, category, name etc.,
  acceptance:
  - Catalog listing includes an image, product details like name, description and
    a unique product identifier
  priority: P1
  status: todo
- id: S4
  epic: E2
  description: Each listed product contains actions buttons to allow customers to
    add or update their order and/or navigate away from the page.
  acceptance:
  - Upon pressing an "Add To Cart" button, the associated quantity value of this particular
    product should increment accordingly on web frontend side
  - a list is created if it doesn't already exist, displaying this newly added product
    details in tabular form where customers have access to fields for changing their
    orders as per needs. Upon completion, user must click 'save and checkout' which
    updates relevant database table
  priority: P1
  status: todo
- id: S5
  epic: E4
  description: On a secure login attempt to place an order from cart system with all
    essential details, including name of card holder or payee, payment mode selection
    etc.,
  acceptance:
  - Upon submitting final order button (simulate payment) after reviewing products
    and quantity, summary of purchased products are shown alongside delivery/payment
    address, also the checkout summary must provide details regarding product pricing
  priority: P1
  status: todo
- id: S6
  epic: E5
  description: Track each purchase once user makes order, allowing retrieval through
    a dedicated link with the respective user.
  acceptance:
  - Upon successfully placing an order through above checkout button and successful
    processing by system for tracking order - customers must receive email notification
    mentioning 'Your order has been placed!' accompanied with reference no for the
    same so as to follow up later at convenience of customers to check on its current
    status which can also be found through his profile
  priority: P1
  status: todo
- id: S7
  epic: E3
  description: Implement an action to enable customers updating quantities for products
    added into the cart
  acceptance:
  - Once users successfully navigate onto this feature after clicking the edit link
    beside their specific order quantity, modal pops up for allowing modification.
    Any updates will reflect back automatically upon confirmation button clicked
  priority: P1
  status: todo
- id: S8
  epic: E5
  description: Users can follow progress and delivery of all previous orders
  acceptance:
  - The dashboard on customer account includes historical list displaying current
    order number with reference date alongwith a summary field having respective details
  - in the backend order statuses get stored against particular users' identifier
    after every action carried out by system while handling these orders throughout
    various stages right from pending payment confirmation through delivered
  priority: P1
  status: todo
- id: S9
  epic: E3
  description: Provide options to add product quantity from the main catalog listing
    for quicker checkout process if needed by customer.
  acceptance:
  - Each item on list of all products must display quantity fields so users can quickly
    adjust these quantities as per need and initiate shopping cart or checkout without
    manual actions like search/add
  priority: P1
  status: todo
